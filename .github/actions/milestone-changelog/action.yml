name: Milestone Changelog

# Description of the workflow
description: Re-generates changelog for a given milestone

inputs:
  milestone:
    description: Milestone object containing number and title
    required: true
  token:
    description: GitHub token
    required: true

runs:
  using: "composite"
  steps:
    - name: Parse input
      id: args
      uses: actions/github-script@v6
      with:
        script: |
          const milestone = JSON.parse(inputs.milestone);
          core.setOutput("milestone_title", milestone.title);
          core.setOutput("milestone_number", milestone.number);
        inputs:
          milestone: ${{ inputs.milestone }}

    - name: Collect Changelog
      id: changelog
      uses: actions/github-script@v6
      with:
        script: |
          const allowedSections = [
            "api",
            "vm",
            "vmop",
            "vmbda",
            "vmclass",
            "vmip",
            "vmipl",
            "vdsnapshot",
            "vmsnapshot",
            "vmrestore",
            "disks",
            "vd",
            "images",
            "vi",
            "cvi",
            "core",
            "api-service",
            "vm-route-forge",
            "kubevirt",
            "kube-api-rewriter",
            "cdi",
            "dvcr",
            "module",
            "observability"
          ];

          const milestoneNumber = inputs.milestone_number;
          const token = inputs.token;
          const octokit = github.getOctokit(token);

          const { data: commits } = await octokit.rest.repos.listCommits({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: milestoneNumber
          });

          const changelogCommits = commits
            .map(commit => commit.commit.message)
            .map(message => {
              const match = message.match(/^(?<type>\w+)\((?<scope>[^)]+)\): (?<subject>.+)$/);
              if (!match) return null;

              const { type, scope, subject } = match.groups;
              if ((type === "feat" || type === "fix") && allowedSections.includes(scope)) {
                return `- **${scope}**: ${subject}`;
              }
              return null;
            })
            .filter(Boolean);

          const changelogMarkdown = [
            `# Changelog for Milestone: ${inputs.milestone_title}`,
            "",
            ...changelogCommits
          ].join("\n");

          const fs = require("fs");
          const filename = `./CHANGELOG/CHANGELOG-${inputs.milestone_title}.md`;
          fs.mkdirSync("./CHANGELOG", { recursive: true });
          fs.writeFileSync(filename, changelogMarkdown);

          console.log(`Generated changelog for milestone ${inputs.milestone_title} with filtered commits.`);

        inputs:
          milestone_title: ${{ steps.args.outputs.milestone_title }}
          milestone_number: ${{ steps.args.outputs.milestone_number }}
          token: ${{ inputs.token }}

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3.10.1
      with:
        commit-message: |
          Re-generate changelog ${{ steps.args.outputs.milestone_title }}

          Signed-off-by: deckhouse-BOaTswain <89150800+deckhouse-boatswain@users.noreply.github.com>
        base: main
        branch: changelog/${{ steps.args.outputs.milestone_title }}
        milestone: ${{ steps.args.outputs.milestone_number }}
        title: Changelog ${{ steps.args.outputs.milestone_title }}
        body: |
          The changelog for milestone **${{ steps.args.outputs.milestone_title }}** has been generated.

          For details, see the [changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG/CHANGELOG-${{ steps.args.outputs.milestone_title }}.md).
        labels: changelog, auto, status/backport
        token: ${{ inputs.token }}
        delete-branch: true
